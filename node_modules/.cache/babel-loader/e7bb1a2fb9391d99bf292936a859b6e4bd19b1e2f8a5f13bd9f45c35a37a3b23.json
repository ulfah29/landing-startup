{"ast":null,"code":"var _jsxFileName = \"/Users/ulfah.asmaniah/work/landing-startup/src/components/FAQ/index.js\",\n  _s2 = $RefreshSig$();\n/** @jsxImportSource @emotion/react */\nimport { useRef, useState } from 'react';\nimport { faqContainer, accordionWrapper } from './styles';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nfunction FAQ() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const handleItemClick = index => {\n    setActiveIndex(prevIndex => prevIndex === index ? null : index);\n  };\n  const data = [{\n    question: 'What are accordion components?',\n    answer: 'Accordion components are user interface elements used for organizing and presenting content in a collapsible manner. They typically consist of a header, content, and an expand/collapse action.'\n  }, {\n    question: 'What are they used for?',\n    answer: 'They are commonly employed in various contexts, including FAQs, product descriptions, navigation menus, settings panels, and data tables, to save screen space and provide a structured and user-friendly interface for presenting information or options.'\n  }, {\n    question: 'Accordion as a musical instrument',\n    answer: 'The accordion is a musical instrument with a keyboard and bellows. It produces sound by air passing over reeds when the player expands or compresses the bellows, used in various music genres.'\n  }, {\n    question: 'Can I create an accordion component with a different framework?',\n    answer: 'Yes of course, it is very possible to create an accordion component with another framework.'\n  }];\n\n  // main Accordion component\n  const Accordion = () => {\n    return _jsxDEV(\"div\", {\n      children: data.map((item, index) => _jsxDEV(AccordionItem, {\n        question: item.question,\n        answer: item.answer,\n        isOpen: activeIndex === index,\n        onClick: () => handleItemClick(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this);\n  };\n  const AccordionItem = ({\n    question,\n    answer,\n    isOpen,\n    onClick\n  }) => {\n    _s();\n    const contentHeight = useRef();\n    return _jsxDEV(\"div\", {\n      css: accordionWrapper,\n      children: [_jsxDEV(\"button\", {\n        className: `accordionList ${isOpen ? 'active' : ''}`,\n        onClick: onClick,\n        children: _jsxDEV(\"p\", {\n          className: \"question-content\",\n          children: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), _jsxDEV(\"div\", {\n        ref: contentHeight,\n        className: \"answer-container\",\n        style: isOpen ? {\n          height: 'auto'\n        } : {\n          height: \"0px\"\n        },\n        children: _jsxDEV(\"p\", {\n          className: \"answer-content\",\n          children: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  };\n  _s(AccordionItem, \"46k/sDYJPABfOqgNJQh+s6mIYSg=\");\n  return _jsxDEV(\"div\", {\n    css: faqContainer,\n    children: [_jsxDEV(\"h2\", {\n      children: \"Frequently Ask Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), Accordion()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s2(FAQ, \"rd+5N/MkYjuYD0I+B+MlySxQysU=\");\n_c = FAQ;\nexport default FAQ;\nvar _c;\n$RefreshReg$(_c, \"FAQ\");","map":{"version":3,"names":["useRef","useState","faqContainer","accordionWrapper","jsxDEV","_jsxDEV","FAQ","_s2","_s","$RefreshSig$","activeIndex","setActiveIndex","handleItemClick","index","prevIndex","data","question","answer","Accordion","children","map","item","AccordionItem","isOpen","onClick","fileName","_jsxFileName","lineNumber","columnNumber","contentHeight","css","className","ref","style","height","_c","$RefreshReg$"],"sources":["/Users/ulfah.asmaniah/work/landing-startup/src/components/FAQ/index.js"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { useRef, useState } from 'react';\nimport { faqContainer, accordionWrapper } from './styles';\n\nfunction FAQ() {\n    const [activeIndex, setActiveIndex] = useState(0);\n\n    const handleItemClick = (index) => {\n        setActiveIndex((prevIndex) => (prevIndex === index ? null : index));\n    };\n\n    const data = [\n        {\n         question: 'What are accordion components?',\n         answer: 'Accordion components are user interface elements used for organizing and presenting content in a collapsible manner. They typically consist of a header, content, and an expand/collapse action.' ,\n        },\n        {\n         question: 'What are they used for?',\n         answer: 'They are commonly employed in various contexts, including FAQs, product descriptions, navigation menus, settings panels, and data tables, to save screen space and provide a structured and user-friendly interface for presenting information or options.',\n        },\n        {\n         question: 'Accordion as a musical instrument',\n         answer: 'The accordion is a musical instrument with a keyboard and bellows. It produces sound by air passing over reeds when the player expands or compresses the bellows, used in various music genres.',\n        },\n        {\n         question: 'Can I create an accordion component with a different framework?',\n         answer: 'Yes of course, it is very possible to create an accordion component with another framework.',\n        }\n    ];\n    \n    // main Accordion component\n    const Accordion = () => {\n    return (\n        <div>\n            {data.map((item, index) => (\n                <AccordionItem\n                    key={index}\n                    question={item.question}\n                    answer={item.answer}\n                    isOpen={activeIndex === index}\n                    onClick={() => handleItemClick(index)}\n                />\n            ))}\n        </div>\n    )\n    }\n\n    const AccordionItem = ({ question, answer, isOpen, onClick }) => {\n        const contentHeight = useRef();\n         return(\n            <div css={accordionWrapper} >\n                <button className={`accordionList ${isOpen ? 'active' : ''}`} onClick={onClick} >\n                    <p className='question-content'>{question}</p>\n                </button>\n            \n                <div ref={contentHeight} className=\"answer-container\" style={\n                    isOpen\n                    ? { height: 'auto' }\n                    : { height: \"0px\" }\n                    }>\n                    <p className=\"answer-content\">{answer}</p>\n                </div>\n            </div>\n         )\n       }\n  \n\n    return (\n        <div css={faqContainer}>\n            <h2>Frequently Ask Question</h2>\n            {Accordion()}\n        </div>\n    )\n}\n\nexport default FAQ;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}